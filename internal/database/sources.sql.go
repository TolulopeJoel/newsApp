// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: sources.sql

package database

import (
	"context"
)

const getAllSources = `-- name: GetAllSources :many
SELECT id, name, feed_url, created_at
FROM sources
ORDER BY created_at DESC
`

func (q *Queries) GetAllSources(ctx context.Context) ([]Source, error) {
	rows, err := q.db.QueryContext(ctx, getAllSources)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Source
	for rows.Next() {
		var i Source
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.FeedUrl,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
